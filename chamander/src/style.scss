$cham-color-map: (
  //a, b and c for eye color
  'c': #49896F,  //color of eyes-Dark side
  'b': #65ab89,  //color of eyes
  'a': #92D1B3,  //color of eyes-Light side
  //Stomach and body 
  8: #ed7524,
  7: #fe9441,
  6: #febc41,
  5: #fed276,
  'l': #fadda0, //lighter part of stomach
  //Fire in tail
  'f': #f76605,
  3: #FFE26F,
  //n, 2, 1 and 0 -> dark pxls, border or background of the map
  'n': #b84b20,
  2: #B7653C,
  1: #4B3922,
  0: transparent,
  //p -> patita
  'p': #ffffff
);
$cham-size: 10px !default;
$cham-art: (
  chamanderPixel:( //x: 37 - y:40
    (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //1-> todo transparente
    (0 0 0 0 0 0 0 0 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //2
    (0 0 0 0 0 0 n n 8 8 8 8 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //3
    (0 0 0 0 0 n 7 7 7 8 8 8 8 8 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //4
    (0 0 0 0 n 7 7 7 7 8 8 8 8 8 8 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //5
    (0 0 0 0 8 7 7 7 8 8 n 8 8 8 8 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //6
    (0 0 0 2 8 8 8 8 8 n n 2 2 8 8 8 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //7
    (0 0 0 2 8 8 8 8 8 n 2 p c 2 8 8 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //8
    (0 0 0 p n 8 8 8 8 8 2 p c 2 8 8 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //9
    (0 0 0 c n 8 8 8 8 8 2 c c 2 8 8 n 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //10
    (0 0 0 b n 8 8 8 8 8 2 b b 2 8 8 n 1 0 0 0 0 0 0 0 0 f 3 0 0 f 0 0 0 0 0 0) //11
    (0 0 0 2 7 8 8 8 8 8 n a b n 8 8 n 1 0 0 0 0 0 0 0 0 0 f 3 0 0 f 0 0 0 0 0) //12
    (0 0 2 7 7 8 8 8 8 8 8 8 8 8 8 n n 1 0 0 0 0 0 0 0 0 0 0 f 3 0 3 f 0 0 0 0) //13
    (0 0 2 7 8 8 8 8 8 8 8 8 8 8 2 n n 1 0 0 0 0 0 0 0 0 0 0 f 3 3 3 3 0 0 0 0) //14
    (0 0 2 8 n 8 2 8 8 8 8 2 1 2 n n 2 0 0 0 0 0 0 0 0 0 0 0 f f 3 3 3 f 0 0 0) //15
    (0 0 0 1 n n n n n 2 2 p n n n n 1 0 0 0 0 0 n 0 0 0 0 0 0 f f 3 3 3 f 0 0) //16
    (0 0 0 0 2 1 1 2 2 n n n n 2 n n 1 0 0 0 2 n 7 2 0 0 f 0 0 f f f 3 3 f f 0) //17
    (0 0 n n 0 0 0 1 1 1 2 2 n n n n n 2 2 2 8 n 7 2 0 0 0 f f 3 f f f f f f 0) //18
    (0 n 7 n 7 n n 2 6 6 6 n n n n n n n 8 8 8 8 8 2 0 0 0 f f 3 f f f f 3 0 0) //19
    (0 2 7 7 8 8 8 2 6 6 6 6 n n n n n n 8 8 8 8 n 0 0 0 0 f 3 3 3 3 f f 3 0 0) //20
    (0 0 2 8 8 8 8 n 5 5 5 6 n n n n n n 8 8 8 n 1 0 0 0 0 0 f 3 3 3 3 3 f f 0) //21
    (0 0 0 2 8 8 8 5 5 5 5 5 6 n n n n n n 8 8 1 0 0 0 0 0 0 f f 3 f f 3 f f 0) //22
    (0 0 0 0 2 8 2 5 5 5 5 5 5 n n n n n n n 1 0 0 0 0 0 0 0 0 f 3 n n f f f 0) //23
    (0 0 0 0 0 2 2 5 5 5 5 5 5 n n n n 1 1 1 0 0 0 0 0 0 0 0 0 0 n n n f f 0 0) //24
    (0 0 0 0 0 0 2 l l 5 5 5 5 6 n n n n 1 0 0 0 0 0 0 0 0 0 0 0 2 n n 0 0 0 0) //25
    (0 0 0 0 0 n 6 l l l 5 5 5 6 n n n n 1 0 0 0 0 0 0 0 0 0 0 2 7 7 n 0 0 0 0) //26
    (0 0 0 0 0 2 l l l l l 5 5 5 n n n n 1 0 0 0 0 0 0 0 0 0 2 7 7 n 0 0 0 0 0) //27
    (0 0 0 0 0 1 l l l l l 5 5 5 n n n n n 1 0 0 0 0 0 0 0 2 7 7 7 1 0 0 0 0 0) //28
    (0 0 0 0 2 1 l l l 5 l 5 5 5 n n n n n n 1 0 0 0 0 2 n 8 8 7 1 0 0 0 0 0 0) //29
    (0 0 0 n 8 1 l l 5 l 5 5 5 6 2 8 8 n n n 1 2 2 2 n 8 8 8 8 8 1 0 0 0 0 0 0) //30
    (0 0 n 8 8 2 5 5 l 5 l 5 5 n 8 8 8 8 8 n n 2 n n n n 8 8 8 1 0 0 0 0 0 0 0) //31
    (0 0 n 8 8 8 2 5 5 5 5 5 5 2 8 8 8 8 8 n n 2 n n n n n n 1 0 0 0 0 0 0 0 0) //32
    (0 0 2 8 8 8 2 6 5 5 5 5 6 1 8 8 8 8 8 n n 1 n n n n 6 1 0 0 0 0 0 0 0 0 0) //33
    (0 0 2 n 8 n n 2 6 6 6 6 6 1 n 8 8 n n n n 1 n n 6 6 1 0 0 0 0 0 0 0 0 0 0) //34
    (0 0 0 2 n n n n 1 6 6 6 6 1 n n n n n n n 1 6 6 1 1 0 0 0 0 0 0 0 0 0 0 0) //35
    (0 0 0 0 2 n n n n 1 2 6 6 6 2 n n n n n n 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0) //36
    (0 0 0 2 n n n n n n 1 1 1 1 1 n n n n n 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //37
    (0 0 2 n 8 8 n n n 1 0 0 0 0 0 1 2 n n n n 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //38
    (0 2 p 2 p 2 n n 1 0 0 0 0 0 0 2 8 8 8 n n 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //39
    (0 0 2 1 1 1 1 2 0 0 0 0 0 0 0 1 p 2 p 2 p 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //40
    (0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0) //41-> todo transparente

  ),
);
//reference: https://una.im/sass-pixel-art/
// Function to read the matrix and pixelize it!
@function pixelize($matrix, $size) {
  $l: length($matrix); // length of the entire
  $sh: ''; // shadows list
  $i: $l; // length of the line

  // read through the length of the matrix and decide on the box shadow color and position
  @for $i from 1 through $l {
    $row: nth($matrix, $i); //

    @for $j from 1 through length($row) {
      $item: nth($row, $j);

      @if map-has-key($cham-color-map, $item) {
        $sh: $sh +($j*$size)+' '+($i*$size)+' '+map-get($cham-color-map, $item);
      }
      @else {
        @warn 'there is no color specified in "$cham-color-map" for: "#{$item}"';
      }
      @if not ($j ==length($row) and $i ==$l) {
        $sh: $sh +',';
      }
    }
  }
  @return unquote($sh);
}
// Mixin to style each item
@mixin style-item($matrix, $size) {
  position: relative; // pixels stack next to each other

  // set width & height of icon based on size of pixels
  width: ($size * length(nth($matrix, 1)));
  height: ($size * length($matrix));
  &:after {
    content: '';
    // position everything from the top left corner
    position: absolute;
    top: (-$size);
    left: (-$size);
    width: $size;
    height: $size;

    // this is where we make the stitch
    box-shadow: pixelize($matrix, $size);
  }
}
//Styling
body {
  background: #c4d6d9;
  align-items: center;
  justify-content: center;
  display: flex;
}
@each $key, $value in $cham-art {
  .#{$key} {
    @include style-item($value, $cham-size);
  }
}